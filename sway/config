### STARTUP PROGRAMS
#
# hot plug monitor support
exec_always "killall kanshi; exec kanshi"
# fix GTK apps slow startup
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
    dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
# ibus
exec "XDG_CURRENT_DESKTOP=KDE ibus-daemon -drx"
# network manager applet
exec nm-applet --indicator
# nightlight
exec gammastep -t 5700:3500
# notification daemon
exec mako
# keyring (needed for skype and chromium logins)
# exec /usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh
# gtk themes workaround for wayland
exec_always ~/.local/bin/import-gsettings.sh \
    gtk-theme:gtk-theme-name \
    icon-theme:gtk-icon-theme-name \
    cursor-theme:gtk-cursor-theme-name

### FONTS
#
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 9

### VARIABLES
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show "drun,dmenu" | xargs swaymsg exec --

# screenlock
set $lock swaylock --daemonize --clock --datestr "%b %d %Y"\
        -i ~/Pictures/Wallpapers/get_your_wish.png

# ibus switch command
set $switch_ibus_engine "~/.local/bin/switch_ibus_engine.sh"

# screenshots
set $screenshot_output grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') 


### INPUT CONFIGURATION
#
input "1267:12384:ELAN0501:01_04F3:3060_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}
input "type:keyboard" {
    xkb_layout fr
    xkb_variant us
}

### OUTPUT CONFIGURATION
#
# monitors
# Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
output * bg ~/Pictures/Wallpapers/alena-aenami-horizon-1k.jpg fill

### Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 120 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 300 '$lock' \
         timeout 420 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep '$lock'
bindsym Scroll_Lock exec '$lock'

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pulsemixer --unmute; \
        exec --no-startup-id pulsemixer --change-volume +5 --max-volume 100
bindsym XF86AudioLowerVolume exec --no-startup-id pulsemixer --unmute; \
        exec --no-startup-id pulsemixer --change-volume -5
bindsym XF86AudioMute exec --no-startup-id pulsemixer --toggle-mute && $refresh_i3status

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Control brightness with xbacklight
bindsym XF86MonBrightnessUp exec light -A 10
bindsym XF86MonBrightnessDown exec light -U 10

# Screenshots
bindsym --release Print exec               ~/.local/bin/grim.py
bindsym --release Control+Print exec       ~/.local/bin/grim.py --clipboard
bindsym --release Shift+Print exec         ~/.local/bin/grim.py --rect
bindsym --release Control+Shift+Print exec ~/.local/bin/grim.py --rect --clipboard
        
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+q kill

bindsym $mod+d exec $menu

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+s split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
#bindsym $mod+space focus mode_toggle
bindsym $mod+b focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10; workspace $ws10

# move focused workspace between monitors
bindsym $mod+Shift+greater move workspace to output right
bindsym $mod+Shift+less move workspace to output left

# assign workspaces to different monitors
workspace 1 output eDP-1
workspace 2 output eDP-1
workspace 3 output eDP-1
workspace 4 output eDP-1
workspace 5 output eDP-1
workspace 6 output HDMI-A-1 eDP-1 
workspace 7 output HDMI-A-1 eDP-1
workspace 8 output HDMI-A-1 eDP-1
workspace 9 output HDMI-A-1 eDP-1
workspace 10 output HDMI-A-1 eDP-1

for_window [class="MATLAB R2020b - academic use"] floating enable
# assign some apps to preferred workspaces
for_window [class="Spotify"] move window to workspace $ws9
assign [class="Skype"] 10
assign [class="Slack"] 10
assign [class="discord"] 10
assign [class="Ferdi"] 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
bindsym $mod+space exec $switch_ibus_engine 

# Gaps
for_window [class=".*"] border pixel 0
gaps inner 10

# border colors
# class                 border  backgr. text    indicator
client.focused          #4c7899 #C50ED2 #ffffff #FF8C00 

bindsym $mod+n exec "~/miniconda3/bin/flash_window"

default_border none

bar {
    swaybar_command waybar
} 

# need this to use flashfocus as systemd service
exec "systemctl --user import-environment; systemctl --user start sway-session.target"
